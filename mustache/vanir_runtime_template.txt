#include <vanir/Vanir.h>
#include <vanir/Class.h>
#include <vanir/Enum.h>
#include <vanir/Method.h>
#include <vanir/Field.h>

#include <{{INPUT_HEADER_PATH}}>

namespace vanir
{
	struct Vanir_Runtime_{{MODULE_NAME}}_{{INPUT_HEADER_NAME}}
	{
		Vanir_Runtime_{{MODULE_NAME}}_{{INPUT_HEADER_NAME}}(void)
		{
			{{#CLASS_RUNTIME_LIST}}
			{
				if(!GetTypeByName("{{CLASS_NAME}}"))
				{
					Class* class_ = new Class("{{CLASS_NAME}}");
					//class field{{#CLASS_FIELD_LIST}}
					class_->DefineField(new Field("{{CLASS_FIELD_NAME}}", &{{CLASS_NAME}}::{{CLASS_FIELD_NAME}}));{{/CLASS_FIELD_LIST}}
					//class method{{#CLASS_METHOD_LIST}}
					class_->DefineMethod(new Method("{{CLASS_METHOD_NAME}}", &{{CLASS_NAME}}::{{CLASS_METHOD_NAME}}));{{/CLASS_METHOD_LIST}}
					RegisterType(class_);
				}
			}{{/CLASS_RUNTIME_LIST}}
		}
	} gVanir_Runtime_{{MODULE_NAME}}_{{INPUT_HEADER_NAME}}_instance;
};//namespace vanir
